

#include <fix_ide.h>


igl_binding("test_binding")
igl_input("b", "matches(a)")
igl_input("a", "type_f32")
igl_output("out3", "matches(c)")
igl_input("c", "type_i32", "type_i64")
igl_input("d", "matches(c)")
igl_input("e", "matches(d)")

igl_begin_code()

// TODO: Macros for these typedefs
typedef IGL_PY_TYPE_a::Scalar Scalar_a;
typedef Eigen::Matrix<
    Scalar_a,
    Eigen::Dynamic,
    Eigen::Dynamic,
    IGL_PY_TYPE_a::Order> Type_a;
Eigen::Map<Type_a, Eigen::Aligned> A(a.data(0), a.shape()[0], a.shape[1]);

typedef IGL_PY_TYPE_b::Scalar Scalar_b;
typedef Eigen::Matrix<
    Scalar_b,
    Eigen::Dynamic,
    Eigen::Dynamic,
    IGL_PY_TYPE_b::Order> Type_b;
Eigen::Map<Type_b, Eigen::Aligned> B(b.data(0), b.shape()[0], b.shape[1]);

return A + B; // TODO: Move constructor back from numpy

igl_end_code()


